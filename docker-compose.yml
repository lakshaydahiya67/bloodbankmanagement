services:
  web:
    build: .
    command: >
      bash -c "
        echo 'Waiting for PostgreSQL to be ready...' &&
        sleep 10 &&
        python manage.py migrate &&
        python manage.py collectstatic --noinput &&
        python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    env_file:
      - ./.env
    ports:
      - "8000:8000"  # Add this for debugging
    depends_on:
      - db
  
  db:
    image: postgres:14-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d
    env_file:
      - ./.env
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
      - TZ=UTC
      - PGTZ=UTC
    command: postgres -c timezone=UTC
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bloodbankuser -d bloodbank"]
      interval: 5s
      timeout: 5s
      retries: 5
  
  nginx:
    image: nginx:1.23-alpine
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./staticfiles:/app/staticfiles
    depends_on:
      - web

volumes:
  postgres_data: